name: Publish to PyPI
on:
  push:
    #branches-ignore: ['*']
    #tags: ['*']
  release:
    types: [published]
jobs:
  build-wayland:
    name: Build Wayland libraries
    runs-on: ubuntu-latest
    env:
      wayland-version: "1.19.0"
      wayland-protocols-version: "1.21"
      wlroots-version: "0.14.1"
      libdrm-version: "2.4.105"
      seatd-version: "0.5.0"
    steps:
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt-get install -y --no-install-recommends \
            libegl1-mesa-dev \
            libgbm-dev \
            libgles2-mesa-dev \
            libinput-dev \
            libpciaccess-dev \
            libxcb-composite0-dev \
            libxcb-dri3-dev \
            libxcb-icccm4-dev \
            libxcb-image0-dev \
            libxcb-render0-dev \
            libxcb-xfixes0-dev \
            libxcb-xinput-dev \
            libxcb1-dev \
            libxkbcommon-dev \
            ninja-build
          sudo pip install meson
      - name: Set environment variables
        run: |
          echo "CPATH=${HOME}/wayland/usr/include" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=${HOME}/wayland/usr/lib" >> $GITHUB_ENV
          echo "LIBRARY_PATH=${HOME}/wayland/usr/lib" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=${HOME}/wayland/usr/share/pkgconfig:${HOME}/wayland/usr/lib/pkgconfig" >> $GITHUB_ENV
      - name: Download and unpack Wayland source
        run: |
          wget $WAYLAND_URL
          wget $WAYLAND_PROTOCOLS_URL
          wget $LIBDRM_URL
          wget -O seatd.tar.gz $SEATD_URL
          wget -O wlroots.tar.gz $WLROOTS_URL
          tar -xJf wayland-${{ env.wayland-version }}.tar.xz
          tar -xJf wayland-protocols-${{ env.wayland-protocols-version }}.tar.xz
          tar -xzf drm-libdrm-${{ env.libdrm-version }}.tar.gz
          tar -xzf seatd.tar.gz
          tar -xzf wlroots.tar.gz
        env:
          WAYLAND_URL: https://wayland.freedesktop.org/releases/wayland-${{ env.wayland-version }}.tar.xz
          WAYLAND_PROTOCOLS_URL: https://wayland.freedesktop.org/releases/wayland-protocols-${{ env.wayland-protocols-version }}.tar.xz
          LIBDRM_URL: https://gitlab.freedesktop.org/mesa/drm/-/archive/libdrm-${{ env.libdrm-version }}/drm-libdrm-${{ env.libdrm-version }}.tar.gz
          SEATD_URL: https://git.sr.ht/~kennylevinsen/seatd/archive/${{ env.seatd-version }}.tar.gz
          WLROOTS_URL: https://github.com/swaywm/wlroots/archive/${{ env.wlroots-version }}.tar.gz
      - name: Build wayland
        working-directory: wayland-${{ env.wayland-version }}
        run: |
          ./configure --disable-documentation --prefix=/usr
          make
          DESTDIR=~/wayland make install
          sudo make install
      - name: Build wayland-protocols
        working-directory: wayland-protocols-${{ env.wayland-protocols-version }}
        run: |
          ./configure --prefix=/usr
          make
          DESTDIR=~/wayland make install
          sudo make install
      - name: Build libdrm
        working-directory: drm-libdrm-${{ env.libdrm-version }}
        run: |
          meson build --prefix=/usr
          ninja -C build
          DESTDIR=~/wayland ninja -C build install
          sudo ninja -C build install
      - name: Build seatd
        working-directory: seatd-${{ env.seatd-version }}
        run: |
          meson build --prefix=/usr
          ninja -C build
          DESTDIR=~/wayland ninja -C build install
          sudo ninja -C build install
      - name: Build wlroots
        working-directory: wlroots-${{ env.wlroots-version }}
        run: |
          meson build --prefix=/usr
          ninja -C build
          DESTDIR=~/wayland ninja -C build install
      - name: Create artifact
        run: tar czf ~/wayland.tar.gz -C ${HOME}/wayland/ .
      - name: Upload built libraries
        uses: actions/upload-artifact@v2
        with:
          name: wayland
          path: ~/wayland.tar.gz
          if-no-files-found: error
  build-wheel-cpython:
    name: Build CPython wheels
    runs-on: ubuntu-latest
    # container: quay.io/pypa/manylinux_2_24_x86_64
    needs: build-wayland
    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9"]
    steps:
      - name: Download wayland libraries
        uses: actions/download-artifact@v2
        with:
          name: wayland
      - name: Unpack wayland artifact
        run: sudo tar xf wayland.tar.gz -C /
      - name: Checkout repo
        uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt-get install -y --no-install-recommends \
            libegl1 \
            libgles2 \
            libudev-dev \
            libxkbcommon-dev
          pip install --upgrade pip setuptools
          python -m pip install -r requirements-wheel.txt
      - name: Build wheels
        run: |
          python wlroots/ffi_build.py
          python setup.py bdist_wheel
          ls dist/
          auditwheel show dist/pywlroots-*.whl
          auditwheel repair --plat manylinux_2_24_x86_64 -w output_wheels dist/pywlroots-*.whl
#      - name: Publish package to PyPI
#        uses: pypa/gh-action-pypi-publish@release/v1
#        if: github.event_name == 'release'
#        with:
#          user: __token__
#          password: ${{ secrets.PYPI_API_TOKEN }}
#      - name: Publish package to TestPyPI
#        uses: pypa/gh-action-pypi-publish@release/v1
#        if: github.event_name == 'push'
#        with:
#          user: __token__
#          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
#          repository_url: https://test.pypi.org/legacy/
#          skip_existing: true
